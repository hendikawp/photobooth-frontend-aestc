import{Q as I}from"./QCircularProgress-DEx_ZwD9.js";import{d as B,J as x,c as v,l as b,o as C,Y as p,ae as w,e as y,b as _,G as c,q as S,p as E,L as M,I as T,af as k,ag as F,m as D,s as N,E as m}from"./index-BQ1gfdb-.js";const $={id:"countdown-timer-container",class:"flex flex-center",style:{width:"70vw",height:"70vh"}},z=["innerHTML"],H={style:{height:"100%"}},j=B({__name:"CountdownTimer",props:{duration:{},messageDuration:{default:.5},messageText:{default:"ðŸ˜ƒ"}},setup(h){let a;const e=x(0),s=x(0),r=h,i=v(()=>e.value>0),u=v(()=>e.value>0),d=v(()=>e.value<=r.messageDuration);b(()=>{g()}),C(()=>{f()});const f=()=>{clearInterval(a),e.value=0},g=()=>{s.value=r.duration,e.value=s.value,console.log(`starting timer, duration=${s.value}`),a=window.setInterval(()=>{e.value-=.05,e.value<=0&&clearInterval(a)},50)};return(l,t)=>p((y(),_("div",$,[p(c("div",{id:"countdown-timer-message",style:{position:"absolute","font-size":"150px"},innerHTML:l.messageText},null,8,z),[[w,d.value]]),c("div",H,[p(S(I,{id:"countdown-circular-progress","show-value":!d.value,style:{width:"100%",height:"100%","text-shadow":"#222 0 0 10px","font-weight":"bold",opacity:"85%"},value:e.value,min:0,max:s.value,reverse:"","animation-speed":"100","font-size":"0.5em",size:"70vh",color:"secondary",class:"text-secondary",thickness:.16},{default:E(()=>[M(T(parseFloat(e.value.toFixed(0))),1)]),_:1},8,["show-value","value","max"]),[[w,u.value]])])],512)),[[w,i.value]])}}),O={id:"preview-container",class:""},V={id:"preview-outer-container",class:"preview-center-element"},L=["src"],q=B({__name:"PreviewStream",props:{enableMirrorEffectStream:{type:Boolean},enableMirrorEffectFrame:{type:Boolean},enableBlurredBackgroundStream:{type:Boolean},frameOverlayImage:{}},setup(h){const a=h;let e=null,s=null,r=null,i=null;const u=(t,n,o)=>{(t.width!=o.width||t.height!=o.height)&&(t.width=o.width,t.height=o.height),n.drawImage(o,0,0)},d=k((t,n,o)=>{u(t,n,o)},300),{open:f,close:g}=F("/api/aquisition/stream",{immediate:!1,autoReconnect:{retries:-1,delay:1e3},onConnected(){console.log("stream connected via websockets")},onDisconnected(t,n){console.log("stream disconnected",n)},async onMessage(t,n){if(e&&s||r&&i){const o=await createImageBitmap(new Blob([n.data],{type:"image/jpeg"}));e&&s&&u(e,s,o),r&&i&&d(r,i,o)}else console.error("jpeg bytes received but no canvas to draw to.")}}),l=v(()=>a.frameOverlayImage??!0);return b(()=>{console.log("preview stream mounted!");const t=document.getElementById("preview-inner-overlay");t&&(t.onload=function(){console.log(t.naturalWidth/t.naturalHeight);const n=document.getElementById("preview-inner-container");n.style.aspectRatio=Number(t.naturalWidth/t.naturalHeight).toFixed(4)}),e=document.getElementById("preview-inner-stream"),r=document.getElementById("preview-outer-blurred"),e&&(s=e.getContext("2d")),r&&(i=r.getContext("2d")),(e||r)&&f()}),D(()=>{g()}),(t,n)=>(y(),_("div",O,[a.enableBlurredBackgroundStream?(y(),_("canvas",{key:0,id:"preview-outer-blurred",class:m(["preview-center-element",{mirroreffect:a.enableMirrorEffectStream}])},null,2)):N("",!0),c("div",V,[c("div",{id:"preview-inner-container",class:m(["preview-center-element",{"stream-no-preview":!l.value}])},[c("canvas",{id:"preview-inner-stream",class:m(["preview-center-element",{mirroreffect:a.enableMirrorEffectStream,cover:l.value,contain:!l.value}])},null,2),p(c("img",{id:"preview-inner-overlay",class:m(["preview-center-element contain",{mirroreffect:a.enableMirrorEffectFrame}]),src:a.frameOverlayImage},null,10,L),[[w,l.value]])],2)])]))}});export{q as _,j as a};
